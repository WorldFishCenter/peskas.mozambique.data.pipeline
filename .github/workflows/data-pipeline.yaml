---
env:
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID }}
  KOBO_ASSET_ID: ${{ secrets.KOBO_ASSET_ID }}
  KOBO_PASSWORD: ${{ secrets.KOBO_PASSWORD }}
  KOBO_USERNAME: ${{ secrets.KOBO_USERNAME }}
  MONGODB_CONNECTION_STRING: ${{ secrets.MONGODB_CONNECTION_STRING }}
  AIRTABLE_TOKEN: ${{ secrets.AIRTABLE_TOKEN }}
  AIRTABLE_BASE_ID_FRAME: ${{ secrets.AIRTABLE_BASE_ID_FRAME }}
  PDS_TOKEN: ${{ secrets.PDS_TOKEN }}
  PDS_SECRET: ${{ secrets.PDS_SECRET }}

jobs:
  build-container:
    name: Build R container
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - id: build-docker
        name: Build image with cache
        uses: whoan/docker-build-with-cache-action@v5
        with:
          dockerfile: Dockerfile.prod
          image_name: r-runner-peskas-mozambique
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          username: $GITHUB_ACTOR
  ingest-landings:
    container:
      credentials:
        password: ${{ secrets.GITHUB_TOKEN }}
        username: ${{ github.actor }}
      image: docker.pkg.github.com/worldfishcenter/peskas.mozambique.data.pipeline/r-runner-peskas-mozambique
    name: Ingest landings
    needs: build-container
    runs-on: ubuntu-latest
    steps:
      - if: endsWith(github.ref, '/main')
        name: Set env to production
        run: echo "R_CONFIG_ACTIVE=production" >> $GITHUB_ENV
      - name: Call ingest_landings()
        run: Rscript -e 'peskas.mozambique.data.pipeline::ingest_landings()'
  ingest-pds-data:
    container:
      credentials:
        password: ${{ secrets.GITHUB_TOKEN }}
        username: ${{ github.actor }}
      image: docker.pkg.github.com/worldfishcenter/peskas.mozambique.data.pipeline/r-runner-peskas-mozambique
    name: Ingest GPS data
    needs: build-container
    runs-on: ubuntu-24.04
    steps:
      - if: endsWith(github.ref, '/main')
        name: Set env to production
        run: echo "R_CONFIG_ACTIVE=production" >> $GITHUB_ENV
      - name: Call ingest_pds_trips()
        run: Rscript --vanilla -e 'peskas.mozambique.data.pipeline::ingest_pds_trips()'
      - name: Call ingest_pds_tracks()
        run: Rscript --vanilla -e 'peskas.mozambique.data.pipeline::ingest_pds_tracks()'
  preprocess-landings:
    container:
      credentials:
        password: ${{ secrets.GITHUB_TOKEN }}
        username: ${{ github.actor }}
      image: docker.pkg.github.com/worldfishcenter/peskas.mozambique.data.pipeline/r-runner-peskas-mozambique
    name: Preprocess landings
    needs: ingest-landings
    runs-on: ubuntu-latest
    steps:
      - if: endsWith(github.ref, '/main')
        name: Set env to production
        run: echo "R_CONFIG_ACTIVE=production" >> $GITHUB_ENV
      - name: Call preprocess_landings()
        run: Rscript -e 'peskas.mozambique.data.pipeline::preprocess_landings()'

  preprocess-pds-tracks:
    container:
      credentials:
        password: ${{ secrets.GITHUB_TOKEN }}
        username: ${{ github.actor }}
      image: docker.pkg.github.com/worldfishcenter/peskas.mozambique.data.pipeline/r-runner-peskas-mozambique
    name: Preprocess GPS tracks
    needs: ingest-pds-data
    runs-on: ubuntu-24.04
    steps:
      - if: endsWith(github.ref, '/main')
        name: Set env to production
        run: echo "R_CONFIG_ACTIVE=production" >> $GITHUB_ENV
      - name: Call preprocess_pds_tracks()
        run: Rscript --vanilla -e 'peskas.mozambique.data.pipeline::preprocess_pds_tracks()'

  validate-landings:
    container:
      credentials:
        password: ${{ secrets.GITHUB_TOKEN }}
        username: ${{ github.actor }}
      image: docker.pkg.github.com/worldfishcenter/peskas.mozambique.data.pipeline/r-runner-peskas-mozambique
    name: Validate landings
    needs: preprocess-landings
    runs-on: ubuntu-latest
    steps:
      - if: endsWith(github.ref, '/main')
        name: Set env to production
        run: echo "R_CONFIG_ACTIVE=production" >> $GITHUB_ENV
      - name: Call validate_landings()
        run: Rscript -e 'peskas.mozambique.data.pipeline::validate_landings()'
name: Peskas mozambique Data Pipeline
'on':
  push: null
  schedule:
    - cron: 0 0 */2 * *
  #export-landings:
  #  name: Export landings
  #  runs-on: ubuntu-latest
  #  needs: validate-landings
  #    image: docker.pkg.github.com/worldfishcenter/peskas.mozambique.data.pipeline/r-runner-peskas-mozambique
  #  container:
  #    credentials:
  #      username: ${{ github.actor }}
  #      password: ${{ secrets.GITHUB_TOKEN }}
  #  steps:
  #    - name: Set env to production
  #      if: endsWith(github.ref, '/main')
  #      run: echo "R_CONFIG_ACTIVE=production" >> $GITHUB_ENV
  #    - name: Export landings
  #      run: Rscript -e 'peskas.mozambique.data.pipeline::export_landings()'